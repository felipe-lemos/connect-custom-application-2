{"version":3,"file":"2874.2874.9383b5bbf00c80bee152.js","mappings":"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","sources":["webpack://custom-objects/./node_modules/@commercetools-uikit/notifications/dist/commercetools-uikit-notifications.esm.js"],"sourcesContent":["import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';\nimport _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';\nimport _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';\nimport _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';\nimport _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';\nimport _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';\nimport _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';\nimport _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';\nimport _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';\nimport _pt from 'prop-types';\nimport { Children } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { css } from '@emotion/react';\nimport AccessibleButton from '@commercetools-uikit/accessible-button';\nimport { designTokens } from '@commercetools-uikit/design-system';\nimport { CloseBoldIcon, CheckBoldIcon, WarningIcon, InformationIcon, ErrorIcon } from '@commercetools-uikit/icons';\nimport { filterDataAttributes, warning } from '@commercetools-uikit/utils';\nimport { jsxs, jsx } from '@emotion/react/jsx-runtime';\n\nfunction ownKeys(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context, _context2; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context = ownKeys(Object(t), !0)).call(_context, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context2 = ownKeys(Object(t))).call(_context2, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }\nconst warnIfMissingContent = props => {\n  const hasContent = Boolean(props.intlMessage) || Boolean(Children.count(props.children));\n  process.env.NODE_ENV !== \"production\" ? warning(hasContent, ['Warning: Failed prop type:', \"The prop `intlMessage` is marked as required in `Link`\", 'but its value is `undefined`'].join(' ')) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(hasContent, ['Warning: Failed prop type:', \"The prop `children` is marked as required in `Link`\", 'but its value is `undefined`'].join(' ')) : void 0;\n};\nconst getIconByType = props => {\n  switch (props.type) {\n    case 'error':\n      return ErrorIcon;\n    case 'info':\n      return InformationIcon;\n    case 'warning':\n      return WarningIcon;\n    default:\n      return CheckBoldIcon;\n  }\n};\nconst getIconColor = props => {\n  switch (props.type) {\n    case 'error':\n      return designTokens.fontColorForContentNotificationIconWhenError;\n    case 'info':\n      return designTokens.fontColorForContentNotificationIconWhenInfo;\n    case 'warning':\n      return designTokens.fontColorForContentNotificationIconWhenWarning;\n    case 'success':\n      return designTokens.fontColorForContentNotificationIconWhenSuccess;\n    default:\n      return '';\n  }\n};\nconst NotificationTypeIcon = props => {\n  const Icon = getIconByType(props);\n  return jsx(\"div\", {\n    css: /*#__PURE__*/css(\"display:flex;align-items:center;fill:\", getIconColor(props), \";svg{margin:0 -3px;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:NotificationTypeIcon;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),\n    children: jsx(Icon, {})\n  });\n};\nNotificationTypeIcon.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  type: _pt.oneOf(['error', 'info', 'warning', 'success']).isRequired,\n  intlMessage: _pt.oneOfType([_pt.any, _pt.shape({\n    values: _pt.objectOf(_pt.node)\n  })]),\n  onRemove: _pt.func,\n  children: _pt.node\n} : {};\nNotificationTypeIcon.displayName = 'NotificationTypeIcon';\nconst NotificationCloseIcon = props => jsx(AccessibleButton, {\n  label: \"Remove\",\n  onClick: props.onRemove,\n  css: /*#__PURE__*/css(\"display:flex;align-items:center;fill:\", designTokens.colorSolid, \";&:hover{fill:\", designTokens.colorNeutral40, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:NotificationCloseIcon;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),\n  children: jsx(CloseBoldIcon, {\n    size: \"medium\"\n  })\n});\nNotificationCloseIcon.displayName = 'NotificationCloseIcon';\nconst getContentBorderColor = props => {\n  switch (props.type) {\n    case 'error':\n      return designTokens.borderColorForContentNotificationWhenError;\n    case 'info':\n      return designTokens.borderColorForContentNotificationWhenInfo;\n    case 'warning':\n      return designTokens.borderColorForContentNotificationWhenWarning;\n    case 'success':\n      return designTokens.borderColorForContentNotificationWhenSuccess;\n    default:\n      return '';\n  }\n};\nconst getContainerBackgroundColor = props => {\n  switch (props.type) {\n    case 'error':\n      return designTokens.backgroundColorForContentNotificationWhenError;\n    case 'info':\n      return designTokens.backgroundColorForContentNotificationWhenInfo;\n    case 'warning':\n      return designTokens.backgroundColorForContentNotificationWhenWarning;\n    case 'success':\n      return designTokens.backgroundColorForContentNotificationWhenSuccess;\n    default:\n      return '';\n  }\n};\nconst ContentNotification = props => {\n  warnIfMissingContent(props);\n  return jsxs(\"div\", _objectSpread(_objectSpread({}, filterDataAttributes(props)), {}, {\n    css: /*#__PURE__*/css(\"display:flex;align-items:stretch;text-align:left;word-break:break-word;hyphens:auto;font-size:\", designTokens.fontSizeForContentNotification, \";color:\", designTokens.fontColorForContentNotification, \";font-family:inherit;background-color:\", getContainerBackgroundColor(props), \";border-radius:\", designTokens.borderRadiusForContentNotification, \";border-width:1px;border-style:solid;border-color:\", getContentBorderColor(props), \";padding:\", designTokens.paddingForContentNotification, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:ContentNotification;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),\n    children: [jsx(NotificationTypeIcon, {\n      type: props.type\n    }), jsx(\"div\", {\n      css: /*#__PURE__*/css(\"flex-grow:1;display:flex;align-items:center;padding:\", designTokens.paddingForContentNotificationMessage, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:ContentNotification;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),\n      children: props.intlMessage ? jsx(\"div\", {\n        children: jsx(FormattedMessage, _objectSpread({}, props.intlMessage))\n      }) : props.children\n    }), props.onRemove && jsx(NotificationCloseIcon, {\n      onRemove: props.onRemove\n    })]\n  }));\n};\nContentNotification.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  type: _pt.oneOf(['error', 'info', 'warning', 'success']).isRequired,\n  intlMessage: _pt.oneOfType([_pt.any, _pt.shape({\n    values: _pt.objectOf(_pt.node)\n  })]),\n  onRemove: _pt.func,\n  children: _pt.node\n} : {};\nContentNotification.displayName = 'ContentNotification';\nvar ContentNotification$1 = ContentNotification;\n\n// NOTE: This string will be replaced on build time with the package version.\nvar version = \"17.1.0\";\n\nexport { ContentNotification$1 as ContentNotification, version };\n"],"names":["ownKeys","e","r","t","o","call","enumerable","push","apply","_objectSpread","arguments","length","_context","_context2","Object","getIconColor","props","type","NotificationTypeIcon","Icon","getIconByType","css","children","propTypes","displayName","NotificationCloseIcon","label","onClick","onRemove","size","getContentBorderColor","getContainerBackgroundColor","ContentNotification","Boolean","intlMessage","Children","warnIfMissingContent","ContentNotification$1"],"sourceRoot":""}